'''
A:
    허프만 알고리즘은 빈도가 낮은 두 심벌을 합쳐서 새로운 노드를 생성하고,
    이 과정을 반복하여 트리를 구성합니다. 합쳐진 두 노드는 동일한 레벨에 존재하게 되며,
    이 레벨에서의 노드들은 동일한 코드 길이를 가지게 됩니다. 허프만 트리의 높이가 증가하면서
    빈도가 낮은 두 심벌의 코드 길이가 더해지게 되므로, 높이가 낮을수록 코드 길이가 짧아집니다.
    따라서 빈도가 가장 낮은 두 심벌의 코드 길이는 항상 동일한 레벨에 위치하고 동일합니다.

B. 조금이라도 빈도가 높은 심벌의 코드 길이는 이보다 빈도가 낮은 심벌의 코드 길이보다 항상 작거나 같다.

    허프만 알고리즘은 빈도가 낮은 심벌일수록 긴 코드를 할당하고,
    빈도가 높은 심벌일수록 짧은 코드를 할당합니다.
    이는 데이터를 효율적으로 압축하기 위한 전략으로,
    자주 나타나는 심벌에 더 짧은 코드를 부여함으로써 총 코드 길이를 최소화합니다.
    허프만 트리를 구성하는 과정에서 빈도가 높은 노드일수록 트리의 상위 레벨에 위치하게 되고,
    상위 레벨의 코드는 하위 레벨의 코드보다 짧아집니다.
    이는 허프만 압축 알고리즘이 자연스럽게 수행하는 결과이며,
    따라서 조금이라도 빈도가 높은 심벌의 코드 길이는 이보다
    빈도가 낮은 심벌의 코드 길이보다 항상 작거나 같게 됩니다.
'''